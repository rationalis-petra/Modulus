#+html_head: <link rel="stylesheet" href="../../../../modulus-style.css" type="text/css"/>
#+title: Library: Functor
#+options: toc:nil num:nil html-postamble:nil

#+html: <div style="text-align:right">
[[file:../../../../index.org][Modulus]] / [[file:../../../index.org][Documentation]] / [[../../index.org][Library]] / [[file:../index.org][Abstractions]] / [[file:index.org][Data]] / Functor
#+html: </div>

* Overview
This module is based around the functor class, which has the following
definition:

#+begin_src modulus
(Functor : (𝒰 → 𝒰) → 𝒰)
(defn Functor [F]
  (signature
    (map : {A B} → F A → (A → B) → F B)))
#+end_src

A functor can be thought of as the most general notion of a container for some
values. A simple example is =Array=.



Note: Functor and Cofunctor are equivalent

* Examples

#+begin_src modulus
> open data.array ;; opening data.array imports a functor instance for array
> map (+ 1) ⦗1 2 3⦘
⦗2 3 4⦘
> map reverse ⦗"hello" "world"⦘
⦗"olleh" "dlrow"⦘
> map (λ [x] (x | 2 = 0)) ⦗1 2 3 4 5 6⦘
⦗false true false true false true⦘
#+end_src



* Definition

